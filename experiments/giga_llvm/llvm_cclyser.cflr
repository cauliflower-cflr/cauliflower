instruction-to <- ins . var;
alloca_instruction <- ins . ins;
phi_instruction-pair-value-by_variable[idx] <- ins . var;
bitcast_instruction-from-by_variable <- ins . var;
add_instruction-first_operand-by_variable <- ins . var;
add_instruction-second_operand-by_variable <- ins . var;
getelementptr_instruction-base-by_variable <- ins . var;
ptrtoint_instruction-from-by_variable <- ins . var;
load_instruction-address-by_variable <- ins . var;
load_instruction <- ins . ins;
store_instruction-value-by_variable <- ins . var;
store_instruction-address-by_variable <- ins . var;
call_instruction-raw_function-by_constant <- ins . func_const;
function_constant-function_name <- func_const . func_name;
function-name <- func . func_name;
function_allocating-byname <- func_name . func_name;
function-param[idx] <- func . var;
call_instruction-arg-by_variable[idx] <- ins . var;
ret_instruction-value-by_variable <- ins . var;
instruction-function <- ins . func;
global_variable <- var . ins;

FUNC_IDENTITY <- func . func;
INS_IDENTITY <- ins . ins;
allocating_func <- func . func;
allocating_ins <- ins . ins;
called_func <- ins . func;
returned_var <- func . var;
alloc <- var . ins;
alloc_uninit <- var . ins;
assign <- var . var;
load <- var . var;
store <- var . var;
lpt <- var . ins;
spt <- var . ins;
pt <- var . ins;

stored_mem_TMP <- ins . ins;
stored_mem <- ins . ins;
alloc_mem <- ins . ins;
uninit_mem <- ins . ins;

FUNC_IDENTITY -> ;
INS_IDENTITY -> ;
called_func -> call_instruction-raw_function-by_constant, function_constant-function_name, -function-name;
returned_var -> -instruction-function, ret_instruction-value-by_variable;
allocating_func -> function-name, function_allocating-byname, -function-name;
allocating_ins -> called_func, (FUNC_IDENTITY & allocating_func), -called_func;
alloc_uninit -> -instruction-to, alloca_instruction;
alloc_uninit -> -instruction-to, (INS_IDENTITY & allocating_ins);
alloc -> alloc_uninit;
alloc -> -instruction-to, load_instruction;
alloc -> global_variable;
assign -> -instruction-to, phi_instruction-pair-value-by_variable[idx];
assign -> -instruction-to, add_instruction-first_operand-by_variable;
assign -> -instruction-to, add_instruction-second_operand-by_variable;
assign -> -instruction-to, bitcast_instruction-from-by_variable;
assign -> -instruction-to, ptrtoint_instruction-from-by_variable;
assign -> -instruction-to, getelementptr_instruction-base-by_variable;
assign -> -instruction-to, called_func, returned_var;
assign -> -function-param[idx], -called_func, call_instruction-arg-by_variable[idx];
load -> -instruction-to, load_instruction-address-by_variable;
store -> -store_instruction-value-by_variable, store_instruction-address-by_variable;

pt -> alloc;
pt -> assign, pt;
lpt -> load, pt;
spt -> store, pt;
pt -> lpt, -spt, pt;

alloc_mem -> -alloc_uninit, alloc_uninit;
stored_mem_TMP -> -pt, -store_instruction-address-by_variable, store_instruction-address-by_variable, pt;
stored_mem -> (INS_IDENTITY & stored_mem_TMP);
uninit_mem -> (INS_IDENTITY & !stored_mem), (INS_IDENTITY & alloc_uninit);
